module.exports = {
  roots: ['<rootDir>/src'],
  collectCoverageFrom: ['src/**/*.{js,jsx,ts,tsx}', '!src/**/*.d.ts'],
  setupFiles: ['react-app-polyfill/jsdom'],
  setupFilesAfterEnv: [],
  testMatch: [
    '<rootDir>/src/**/__tests__/**/*.{js,jsx,ts,tsx}',
    '<rootDir>/src/**/*.{spec,test}.{js,jsx,ts,tsx}',
  ],
  testEnvironment: 'jsdom',
  transform: {
    '^.+\\.(js|jsx|mjs|cjs|ts|tsx)$': '<rootDir>/config/jest/babelTransform.js',
    '^.+\\.css$': '<rootDir>/config/jest/cssTransform.js',
    '^(?!.*\\.(js|jsx|mjs|cjs|ts|tsx|css|json)$)': '<rootDir>/config/jest/fileTransform.js',
  },
  transformIgnorePatterns: [
    '[/\\\\]node_modules[/\\\\].+\\.(js|jsx|mjs|cjs|ts|tsx)$',
    '^.+\\.module\\.(css|sass|scss)$',
  ],
  modulePaths: [],
  moduleNameMapper: {
    '^react-native$': 'react-native-web',
    '^.+\\.module\\.(css|sass|scss)$': 'identity-obj-proxy',
    '^@config': '<rootDir>/src/config/index.ts',
    '^@apiConfig': '<rootDir>/src/config/api.ts',
    '^@metricsConfig': '<rootDir>/src/config/metrics.ts',
    '^@analyticsConfig': '<rootDir>/src/config/analytics.ts',
    '^@components/(.*)$': '<rootDir>/src/components/$1',
    '^@hooks/(.*)$': '<rootDir>/src/hooks/$1',
    '^@quoteClient': '<rootDir>/src/api/rest/quoteClient/index.ts',
    '^@constants': '<rootDir>/src/constants.ts',
    '^@utils': '<rootDir>/src/utils/utils.ts',
    '^@services/(.*)$': '<rootDir>/src/services/$1',
    '^@logger': '<rootDir>/src/services/logger/index.ts',
    '^@analytics': '<rootDir>/src/services/analytics/index.ts',
    '^@monitoring': '<rootDir>/src/services/monitoring/index.ts',
  },
  moduleFileExtensions: [
    'web.js',
    'js',
    'web.ts',
    'ts',
    'web.tsx',
    'tsx',
    'json',
    'web.jsx',
    'jsx',
    'node',
  ],
  watchPlugins: ['jest-watch-typeahead/filename', 'jest-watch-typeahead/testname'],
  resetMocks: true,
  babel: {
    presets: ['react-app'],
  },
  eslintConfig: {
    extends: 'react-app',
  },
};
